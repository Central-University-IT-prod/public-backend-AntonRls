import telebot
from telebot import types
from telebot.types import Message

from DB import db_user, db_travel
from UserManager import user_manager
from Keyboards import create_cancel_keyboard


class main_create_travel:
    def __init__(self, bot: telebot.TeleBot):
        self.bot = bot

    def start(self, id):
        msg = self.bot.send_message(id,
                                    'üöâ –°–æ–±–∏—Ä–∞–µ—à—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ? –•–æ—Ä–æ—à–∞—è –∏–¥–µ—è! –î–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥—É–º–∞–µ–º –µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ',
                                    reply_markup=create_cancel_keyboard('travel'))
        self.bot.register_next_step_handler(msg, self.select_name_travel)

    def select_name_travel(self, message: Message):
        if message.text is None:
            msg = self.bot.send_message(message.from_user.id,
                                        '‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
                                        reply_markup=create_cancel_keyboard('travel'))
            self.bot.register_next_step_handler(msg, self.select_name_travel)
            return
        if len(message.text) > 50:
            msg = self.bot.send_message(message.from_user.id,
                                        '‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ:(\n–ü–æ–ø—Ä–æ–±—É–π –µ–≥–æ —É–ª–æ–∂–∏—Ç—å –≤ 50 —Å–∏–º–≤–æ–ª–æ–≤',
                                        reply_markup=create_cancel_keyboard('travel'))
            self.bot.register_next_step_handler(msg, self.select_name_travel)
            return

        travel_id = db_travel.create_travel(message.from_user.id, message.text)
        user_manager.set_payload(message.from_user.id, travel_id)
        markup_inline = types.InlineKeyboardMarkup()
        markup_inline.add(
            types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ', callback_data=f'travel_cancel'))
        markup_inline.add(
            types.InlineKeyboardButton(text='üîú –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data=f'travel_skipenterdisc`{travel_id}'))

        msg = self.bot.send_message(message.from_user.id,
                                    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ! –î–∞–≤–∞–π —Ç–µ–ø–µ—Ä—å –ø–æ–¥—É–º–∞–µ–º –Ω–∞–¥ –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
                                    reply_markup=markup_inline)

        self.bot.register_next_step_handler(msg, self.select_description_travel)

    def select_description_travel(self, message: Message):
        if message.text is None:
            msg = self.bot.send_message(message.from_user.id,
                                        '‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º',
                                        reply_markup=create_cancel_keyboard('travel'))
            self.bot.register_next_step_handler(msg, self.select_description_travel)
            return
        if len(message.text) > 299:
            msg = self.bot.send_message(message.from_user.id,
                                        '‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏–∏–∏–∏–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 300 —Å–∏–º–≤–æ–ª–æ–≤',
                                        reply_markup=create_cancel_keyboard('travel'))
            self.bot.register_next_step_handler(msg, self.select_description_travel)
            return
        travel_id = user_manager.get_payload(message.from_user.id)
        db_travel.update_travel_parm(message.from_user.id, travel_id, 'description', message.text)

        markup_inline = types.InlineKeyboardMarkup()
        markup_inline.add(
            types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', callback_data='travel_addlocation`' + travel_id))
        self.bot.send_message(message.from_user.id, '‚ùì –ê —Å–µ–π—á–∞—Å –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å - –∫—É–¥–∞ —Å–æ–±–∏—Ä–∞–µ–º—Å—è –µ—Ö–∞—Ç—å?',
                              reply_markup=markup_inline)
